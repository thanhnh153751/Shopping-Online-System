package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import model.Statistic.CategoryStatistic;

public final class statistic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _jspx_tagPool_c_forEach_var_items;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _jspx_tagPool_c_forEach_var_items = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _jspx_tagPool_c_forEach_var_items.release();
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        \n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            #chartdiv1 {\n");
      out.write("                width: 100%;\n");
      out.write("                height: 500px;\n");
      out.write("            }\n");
      out.write("            #chartdiv2 {\n");
      out.write("                width: 100%;\n");
      out.write("                height: 500px;\n");
      out.write("                margin-top: 100px;\n");
      out.write("            }\n");
      out.write("            #chartdiv3 {\n");
      out.write("                width: 100%;\n");
      out.write("                height: 500px;\n");
      out.write("                margin-top: 100px;\n");
      out.write("            }\n");
      out.write("            #chartdiv4 {\n");
      out.write("                width: 100%;\n");
      out.write("                height: 500px;\n");
      out.write("                margin-top: 100px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("        <a style=\"text-decoration: none;\" href=\"home\"><h1>Back</h1></a>\n");
      out.write("        <h1>Category Number Statistic</h1> \n");
      out.write("        <div id=\"chartdiv1\"></div>\n");
      out.write("        <h1>Income of Shop</h1>\n");
      out.write("\n");
      out.write("        <form id=\"f\" onchange=\"document.getElementById('f').submit()\" action=\"statistic\">\n");
      out.write("            <select name=\"year\">\n");
      out.write("                <option>Year</option>\n");
      out.write("\n");
      out.write("                ");
      if (_jspx_meth_c_forEach_0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            </select>\n");
      out.write("            <div id=\"columnchart_values\" style=\"width: 900px; height: 300px;\"></div>\n");
      out.write("        </form>\n");
      out.write("        <div id=\"chartdiv2\"></div>\n");
      out.write("        <div id=\"chartdiv3\"></div>\n");
      out.write("        <div id=\"chartdiv4\"></div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("            google.charts.load(\"current\", {packages: ['corechart']});\n");
      out.write("            google.charts.setOnLoadCallback(drawChart);\n");
      out.write("            function drawChart() {\n");
      out.write("                var data = google.visualization.arrayToDataTable([\n");
      out.write("                    [\"Element\", \"Density\", {role: \"style\"}],\n");
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_c_forEach_1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("                ]);\n");
      out.write("\n");
      out.write("                var view = new google.visualization.DataView(data);\n");
      out.write("                view.setColumns([0, 1,\n");
      out.write("                    {calc: \"stringify\",\n");
      out.write("                        sourceColumn: 1,\n");
      out.write("                        type: \"string\",\n");
      out.write("                        role: \"annotation\"},\n");
      out.write("                    2]);\n");
      out.write("\n");
      out.write("                var options = {\n");
      out.write("                    title: \"Year ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.year}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("(VNƒê)\",\n");
      out.write("                    width: 600,\n");
      out.write("                    height: 400,\n");
      out.write("                    bar: {groupWidth: \"95%\"},\n");
      out.write("                    legend: {position: \"none\"},\n");
      out.write("                };\n");
      out.write("                var chart = new google.visualization.ColumnChart(document.getElementById(\"columnchart_values\"));\n");
      out.write("                chart.draw(view, options);\n");
      out.write("            }\n");
      out.write("</script>\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/index.js\"></script>\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/percent.js\"></script>\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/themes/Animated.js\"></script>\n");
      out.write("<script>\n");
      out.write("    /**\n");
      out.write("     * ---------------------------------------\n");
      out.write("     * This demo was created using amCharts 5.\n");
      out.write("     * \n");
      out.write("     * For more information visit:\n");
      out.write("     * https://www.amcharts.com/\n");
      out.write("     * \n");
      out.write("     * Documentation is available at:\n");
      out.write("     * https://www.amcharts.com/docs/v5/\n");
      out.write("     * ---------------------------------------\n");
      out.write("     */\n");
      out.write("\n");
      out.write("// Create root element\n");
      out.write("// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n");
      out.write("    var root1 = am5.Root.new(\"chartdiv1\");\n");
      out.write("\n");
      out.write("// Set themes\n");
      out.write("// https://www.amcharts.com/docs/v5/concepts/themes/\n");
      out.write("    root1.setThemes([\n");
      out.write("        am5themes_Animated.new(root1)\n");
      out.write("    ]);\n");
      out.write("\n");
      out.write("// Create chart\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n");
      out.write("    var chart1 = root1.container.children.push(\n");
      out.write("            am5percent.PieChart.new(root1, {\n");
      out.write("                endAngle: 270\n");
      out.write("            })\n");
      out.write("            );\n");
      out.write("\n");
      out.write("// Create series\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n");
      out.write("    var series1 = chart1.series.push(\n");
      out.write("            am5percent.PieSeries.new(root1, {\n");
      out.write("                valueField: \"value\",\n");
      out.write("                categoryField: \"category\",\n");
      out.write("                endAngle: 270\n");
      out.write("            })\n");
      out.write("            );\n");
      out.write("\n");
      out.write("    series1.states.create(\"hidden\", {\n");
      out.write("        endAngle: -90\n");
      out.write("    });\n");
      out.write("\n");
      out.write("// Set data\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n");
      out.write("    series1.data.setAll([\n");
      out.write("//        {\n");
      out.write("//            category: \"Lithuania\",\n");
      out.write("//            value: 501.9\n");
      out.write("//        }, {\n");
      out.write("//            category: \"Czechia\",\n");
      out.write("//            value: 301.9\n");
      out.write("//        }, {\n");
      out.write("//            category: \"Ireland\",\n");
      out.write("//            value: 201.1\n");
      out.write("//        }, {\n");
      out.write("//            category: \"Germany\",\n");
      out.write("//            value: 165.8\n");
      out.write("//        }, {\n");
      out.write("//            category: \"Australia\",\n");
      out.write("//            value: 139.9\n");
      out.write("//        }, {\n");
      out.write("//            category: \"Austria\",\n");
      out.write("//            value: 128.3\n");
      out.write("//        }, {\n");
      out.write("//            category: \"UK\",\n");
      out.write("//            value: 99\n");
      out.write("//        }\n");
      out.write("    ");
      if (_jspx_meth_c_forEach_2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("    ]);\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    series1.appear(1000, 100);\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<!--Char222222222222222222222222222222222222222222222222222222222222222222222222222of amchar-->\n");
      out.write("<!--<script src=\"https://cdn.amcharts.com/lib/5/index.js\"></script>-->\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/percent.js\"></script>\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/themes/Animated.js\"></script>\n");
      out.write("<script>\n");
      out.write("    /**\n");
      out.write(" * ---------------------------------------\n");
      out.write(" * This demo was created using amCharts 5.\n");
      out.write(" * \n");
      out.write(" * For more information visit:\n");
      out.write(" * https://www.amcharts.com/\n");
      out.write(" * \n");
      out.write(" * Documentation is available at:\n");
      out.write(" * https://www.amcharts.com/docs/v5/\n");
      out.write(" * ---------------------------------------\n");
      out.write(" */\n");
      out.write("\n");
      out.write("// Create root element\n");
      out.write("// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n");
      out.write("var root2 = am5.Root.new(\"chartdiv2\");\n");
      out.write("\n");
      out.write("\n");
      out.write("// Set themes\n");
      out.write("// https://www.amcharts.com/docs/v5/concepts/themes/\n");
      out.write("root2.setThemes([\n");
      out.write("  am5themes_Animated.new(root2)\n");
      out.write("]);\n");
      out.write("\n");
      out.write("\n");
      out.write("// Create chart\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n");
      out.write("var chart2 = root2.container.children.push(am5percent.PieChart.new(root2, {\n");
      out.write("  layout: root2.verticalLayout\n");
      out.write("}));\n");
      out.write("\n");
      out.write("\n");
      out.write("// Create series\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n");
      out.write("var series2 = chart2.series.push(am5percent.PieSeries.new(root2, {\n");
      out.write("  valueField: \"value\",\n");
      out.write("  categoryField: \"category\"\n");
      out.write("}));\n");
      out.write("\n");
      out.write("\n");
      out.write("// Set data\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n");
      out.write("series2.data.setAll([\n");
      out.write("  { value: 10, category: \"One\" },\n");
      out.write("  { value: 9, category: \"Two\" },\n");
      out.write("  { value: 6, category: \"Three\" },\n");
      out.write("  { value: 5, category: \"Four\" },\n");
      out.write("  { value: 4, category: \"Five\" },\n");
      out.write("  { value: 3, category: \"Six\" },\n");
      out.write("  { value: 1, category: \"Seven\" },\n");
      out.write("]);\n");
      out.write("\n");
      out.write("\n");
      out.write("// Create legend\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\n");
      out.write("var legend2 = chart2.children.push(am5.Legend.new(root2, {\n");
      out.write("  centerX: am5.percent(50),\n");
      out.write("  x: am5.percent(50),\n");
      out.write("  marginTop: 15,\n");
      out.write("  marginBottom: 15\n");
      out.write("}));\n");
      out.write("\n");
      out.write("legend2.data.setAll(series2.dataItems);\n");
      out.write("\n");
      out.write("\n");
      out.write("// Play initial series animation\n");
      out.write("// https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series\n");
      out.write("series2.appear(1000, 100);\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--<script src=\"https://cdn.amcharts.com/lib/5/index.js\"></script>-->\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/xy.js\"></script>\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/themes/Animated.js\"></script>\n");
      out.write("<script>\n");
      out.write("    /**\n");
      out.write(" * ---------------------------------------\n");
      out.write(" * This demo was created using amCharts 5.\n");
      out.write(" * \n");
      out.write(" * For more information visit:\n");
      out.write(" * https://www.amcharts.com/\n");
      out.write(" * \n");
      out.write(" * Documentation is available at:\n");
      out.write(" * https://www.amcharts.com/docs/v5/\n");
      out.write(" * ---------------------------------------\n");
      out.write(" */\n");
      out.write("\n");
      out.write("// Create root element\n");
      out.write("// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n");
      out.write("var root3 = am5.Root.new(\"chartdiv3\");\n");
      out.write("\n");
      out.write("// Set themes\n");
      out.write("// https://www.amcharts.com/docs/v5/concepts/themes/\n");
      out.write("root3.setThemes([\n");
      out.write("  am5themes_Animated.new(root3)\n");
      out.write("]);\n");
      out.write("\n");
      out.write("var data3 = [{\n");
      out.write("  name: \"Monicac\",\n");
      out.write("  steps: 45688,\n");
      out.write("  pictureSettings: {\n");
      out.write("    src: \"https://www.amcharts.com/wp-content/uploads/2019/04/monica.jpg\"\n");
      out.write("  }\n");
      out.write("}, {\n");
      out.write("  name: \"Joey\",\n");
      out.write("  steps: 35781,\n");
      out.write("  pictureSettings: {\n");
      out.write("    src: \"https://www.amcharts.com/wp-content/uploads/2019/04/joey.jpg\"\n");
      out.write("  }\n");
      out.write("}, {\n");
      out.write("  name: \"Ross\",\n");
      out.write("  steps: 25464,\n");
      out.write("  pictureSettings: {\n");
      out.write("    src: \"https://www.amcharts.com/wp-content/uploads/2019/04/ross.jpg\"\n");
      out.write("  }\n");
      out.write("}, {\n");
      out.write("  name: \"Phoebe\",\n");
      out.write("  steps: 18788,\n");
      out.write("  pictureSettings: {\n");
      out.write("    src: \"https://www.amcharts.com/wp-content/uploads/2019/04/phoebe.jpg\"\n");
      out.write("  }\n");
      out.write("}, {\n");
      out.write("  name: \"Rachel\",\n");
      out.write("  steps: 15465,\n");
      out.write("  pictureSettings: {\n");
      out.write("    src: \"https://www.amcharts.com/wp-content/uploads/2019/04/rachel.jpg\"\n");
      out.write("  }\n");
      out.write("}, {\n");
      out.write("  name: \"Chandler\",\n");
      out.write("  steps: 11561,\n");
      out.write("  pictureSettings: {\n");
      out.write("    src: \"https://www.amcharts.com/wp-content/uploads/2019/04/chandler.jpg\"\n");
      out.write("  }\n");
      out.write("}];\n");
      out.write("\n");
      out.write("// Create chart\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/xy-chart/\n");
      out.write("var chart3 = root3.container.children.push(\n");
      out.write("  am5xy.XYChart.new(root3, {\n");
      out.write("    panX: false,\n");
      out.write("    panY: false,\n");
      out.write("    wheelX: \"none\",\n");
      out.write("    wheelY: \"none\",\n");
      out.write("    paddingBottom: 50,\n");
      out.write("    paddingTop: 40\n");
      out.write("  })\n");
      out.write(");\n");
      out.write("\n");
      out.write("// Create axes\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n");
      out.write("\n");
      out.write("var xRenderer3 = am5xy.AxisRendererX.new(root3, {});\n");
      out.write("xRenderer3.grid.template.set(\"visible\", false);\n");
      out.write("\n");
      out.write("var xAxis3 = chart3.xAxes.push(\n");
      out.write("  am5xy.CategoryAxis.new(root3, {\n");
      out.write("    paddingTop:40,\n");
      out.write("    categoryField: \"name\",\n");
      out.write("    renderer: xRenderer3\n");
      out.write("  })\n");
      out.write(");\n");
      out.write("\n");
      out.write("\n");
      out.write("var yRenderer3 = am5xy.AxisRendererY.new(root3, {});\n");
      out.write("yRenderer3.grid.template.set(\"strokeDasharray\", [3]);\n");
      out.write("\n");
      out.write("var yAxis3 = chart3.yAxes.push(\n");
      out.write("  am5xy.ValueAxis.new(root3, {\n");
      out.write("    min: 0,\n");
      out.write("    renderer: yRenderer3\n");
      out.write("  })\n");
      out.write(");\n");
      out.write("\n");
      out.write("// Add series\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n");
      out.write("var series3 = chart3.series.push(\n");
      out.write("  am5xy.ColumnSeries.new(root3, {\n");
      out.write("    name: \"Income\",\n");
      out.write("    xAxis: xAxis3,\n");
      out.write("    yAxis: yAxis3,\n");
      out.write("    valueYField: \"steps\",\n");
      out.write("    categoryXField: \"name\",\n");
      out.write("    sequencedInterpolation: true,\n");
      out.write("    calculateAggregates: true,\n");
      out.write("    maskBullets: false,\n");
      out.write("    tooltip: am5.Tooltip.new(root3, {\n");
      out.write("      dy: -30,\n");
      out.write("      pointerOrientation: \"vertical\",\n");
      out.write("      labelText: \"{valueY}\"\n");
      out.write("    })\n");
      out.write("  })\n");
      out.write(");\n");
      out.write("\n");
      out.write("series3.columns.template.setAll({\n");
      out.write("  strokeOpacity: 0,\n");
      out.write("  cornerRadiusBR: 10,\n");
      out.write("  cornerRadiusTR: 10,\n");
      out.write("  cornerRadiusBL: 10,\n");
      out.write("  cornerRadiusTL: 10,\n");
      out.write("  maxWidth: 50,\n");
      out.write("  fillOpacity: 0.8\n");
      out.write("});\n");
      out.write("\n");
      out.write("var currentlyHovered3;\n");
      out.write("\n");
      out.write("series3.columns.template.events.on(\"pointerover\", function (e) {\n");
      out.write("  handleHover3(e.target.dataItem);\n");
      out.write("});\n");
      out.write("\n");
      out.write("series3.columns.template.events.on(\"pointerout\", function (e) {\n");
      out.write("  handleOut3();\n");
      out.write("});\n");
      out.write("\n");
      out.write("function handleHover3(dataItem) {\n");
      out.write("  if (dataItem && currentlyHovered3 != dataItem) {\n");
      out.write("    handleOut3();\n");
      out.write("    currentlyHovered3 = dataItem;\n");
      out.write("    var bullet = dataItem.bullets[0];\n");
      out.write("    bullet.animate({\n");
      out.write("      key: \"locationY\",\n");
      out.write("      to: 1,\n");
      out.write("      duration: 600,\n");
      out.write("      easing: am5.ease.out(am5.ease.cubic)\n");
      out.write("    });\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("function handleOut3() {\n");
      out.write("  if (currentlyHovered3) {\n");
      out.write("    var bullet = currentlyHovered3.bullets[0];\n");
      out.write("    bullet.animate({\n");
      out.write("      key: \"locationY\",\n");
      out.write("      to: 0,\n");
      out.write("      duration: 600,\n");
      out.write("      easing: am5.ease.out(am5.ease.cubic)\n");
      out.write("    });\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("var circleTemplate3 = am5.Template.new({});\n");
      out.write("\n");
      out.write("series3.bullets.push(function (root, series, dataItem) {\n");
      out.write("  var bulletContainer = am5.Container.new(root, {});\n");
      out.write("  var circle = bulletContainer.children.push(\n");
      out.write("    am5.Circle.new(\n");
      out.write("      root,\n");
      out.write("      {\n");
      out.write("        radius: 34\n");
      out.write("      },\n");
      out.write("      circleTemplate3\n");
      out.write("    )\n");
      out.write("  );\n");
      out.write("\n");
      out.write("  var maskCircle = bulletContainer.children.push(\n");
      out.write("    am5.Circle.new(root, { radius: 27 })\n");
      out.write("  );\n");
      out.write("\n");
      out.write("  // only containers can be masked, so we add image to another container\n");
      out.write("  var imageContainer = bulletContainer.children.push(\n");
      out.write("    am5.Container.new(root, {\n");
      out.write("      mask: maskCircle\n");
      out.write("    })\n");
      out.write("  );\n");
      out.write("\n");
      out.write("  var image = imageContainer.children.push(\n");
      out.write("    am5.Picture.new(root, {\n");
      out.write("      templateField: \"pictureSettings\",\n");
      out.write("      centerX: am5.p50,\n");
      out.write("      centerY: am5.p50,\n");
      out.write("      width: 60,\n");
      out.write("      height: 60\n");
      out.write("    })\n");
      out.write("  );\n");
      out.write("\n");
      out.write("  return am5.Bullet.new(root, {\n");
      out.write("    locationY: 0,\n");
      out.write("    sprite: bulletContainer\n");
      out.write("  });\n");
      out.write("});\n");
      out.write("\n");
      out.write("// heatrule\n");
      out.write("series3.set(\"heatRules\", [\n");
      out.write("  {\n");
      out.write("    dataField: \"valueY\",\n");
      out.write("    min: am5.color(0xe5dc36),\n");
      out.write("    max: am5.color(0x5faa46),\n");
      out.write("    target: series3.columns.template,\n");
      out.write("    key: \"fill\"\n");
      out.write("  },\n");
      out.write("  {\n");
      out.write("    dataField: \"valueY\",\n");
      out.write("    min: am5.color(0xe5dc36),\n");
      out.write("    max: am5.color(0x5faa46),\n");
      out.write("    target: circleTemplate3,\n");
      out.write("    key: \"fill\"\n");
      out.write("  }\n");
      out.write("]);\n");
      out.write("\n");
      out.write("series3.data.setAll(data3);\n");
      out.write("xAxis3.data.setAll(data3);\n");
      out.write("\n");
      out.write("var cursor3 = chart3.set(\"cursor\", am5xy.XYCursor.new(root3, {}));\n");
      out.write("cursor3.lineX.set(\"visible\", false);\n");
      out.write("cursor3.lineY.set(\"visible\", false);\n");
      out.write("\n");
      out.write("cursor3.events.on(\"cursormoved\", function () {\n");
      out.write("  var dataItem = series3.get(\"tooltip\").dataItem;\n");
      out.write("  if (dataItem) {\n");
      out.write("    handleHover3(dataItem);\n");
      out.write("  } else {\n");
      out.write("    handleOut3();\n");
      out.write("  }\n");
      out.write("});\n");
      out.write("\n");
      out.write("// Make stuff animate on load\n");
      out.write("// https://www.amcharts.com/docs/v5/concepts/animations/\n");
      out.write("series3.appear();\n");
      out.write("chart3.appear(1000, 100);\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--<script src=\"https://cdn.amcharts.com/lib/5/index.js\"></script>-->\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/xy.js\"></script>\n");
      out.write("<script src=\"https://cdn.amcharts.com/lib/5/themes/Animated.js\"></script>\n");
      out.write("<script>\n");
      out.write("    /**\n");
      out.write(" * ---------------------------------------\n");
      out.write(" * This demo was created using amCharts 5.\n");
      out.write(" * \n");
      out.write(" * For more information visit:\n");
      out.write(" * https://www.amcharts.com/\n");
      out.write(" * \n");
      out.write(" * Documentation is available at:\n");
      out.write(" * https://www.amcharts.com/docs/v5/\n");
      out.write(" * ---------------------------------------\n");
      out.write(" */\n");
      out.write("\n");
      out.write("// Create root element\n");
      out.write("// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n");
      out.write("var root4 = am5.Root.new(\"chartdiv4\");\n");
      out.write("\n");
      out.write("\n");
      out.write("// Set themes\n");
      out.write("// https://www.amcharts.com/docs/v5/concepts/themes/\n");
      out.write("root4.setThemes([\n");
      out.write("  am5themes_Animated.new(root4)\n");
      out.write("]);\n");
      out.write("\n");
      out.write("\n");
      out.write("// Create chart\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/xy-chart/\n");
      out.write("var chart4 = root4.container.children.push(am5xy.XYChart.new(root4, {\n");
      out.write("  panX: false,\n");
      out.write("  panY: false,\n");
      out.write("  wheelX: \"panX\",\n");
      out.write("  wheelY: \"zoomX\",\n");
      out.write("  layout: root4.verticalLayout\n");
      out.write("}));\n");
      out.write("\n");
      out.write("\n");
      out.write("// Data\n");
      out.write("var colors4 = chart4.get(\"colors\");\n");
      out.write("\n");
      out.write("var data4 = [{\n");
      out.write("  country: \"US\",\n");
      out.write("  visits: 725,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-states.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"UK\",\n");
      out.write("  visits: 625,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-kingdom.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"China\",\n");
      out.write("  visits: 602,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/china.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"Japan\",\n");
      out.write("  visits: 509,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/japan.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"Germany\",\n");
      out.write("  visits: 322,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/germany.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"France\",\n");
      out.write("  visits: 214,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/france.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"India\",\n");
      out.write("  visits: 204,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/india.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"Spain\",\n");
      out.write("  visits: 198,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/spain.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"Netherlands\",\n");
      out.write("  visits: 165,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/netherlands.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"Russia\",\n");
      out.write("  visits: 130,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/russia.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"South Korea\",\n");
      out.write("  visits: 93,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/south-korea.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}, {\n");
      out.write("  country: \"Canada\",\n");
      out.write("  visits: 41,\n");
      out.write("  icon: \"https://www.amcharts.com/wp-content/uploads/flags/canada.svg\",\n");
      out.write("  columnSettings: { fill: colors4.next() }\n");
      out.write("}];\n");
      out.write("\n");
      out.write("\n");
      out.write("// Create axes\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n");
      out.write("var xAxis4 = chart4.xAxes.push(am5xy.CategoryAxis.new(root4, {\n");
      out.write("  categoryField: \"country\",\n");
      out.write("  renderer: am5xy.AxisRendererX.new(root4, {\n");
      out.write("    minGridDistance: 30\n");
      out.write("  }),\n");
      out.write("  bullet: function (root, axis, dataItem) {\n");
      out.write("    return am5xy.AxisBullet.new(root, {\n");
      out.write("      location: 0.5,\n");
      out.write("      sprite: am5.Picture.new(root, {\n");
      out.write("        width: 24,\n");
      out.write("        height: 24,\n");
      out.write("        centerY: am5.p50,\n");
      out.write("        centerX: am5.p50,\n");
      out.write("        src: dataItem.dataContext.icon\n");
      out.write("      })\n");
      out.write("    });\n");
      out.write("  }\n");
      out.write("}));\n");
      out.write("\n");
      out.write("xAxis4.get(\"renderer\").labels.template.setAll({\n");
      out.write("  paddingTop: 20\n");
      out.write("});\n");
      out.write("\n");
      out.write("xAxis4.data.setAll(data4);\n");
      out.write("\n");
      out.write("var yAxis4 = chart4.yAxes.push(am5xy.ValueAxis.new(root4, {\n");
      out.write("  renderer: am5xy.AxisRendererY.new(root4, {})\n");
      out.write("}));\n");
      out.write("\n");
      out.write("\n");
      out.write("// Add series\n");
      out.write("// https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n");
      out.write("var series4 = chart4.series.push(am5xy.ColumnSeries.new(root4, {\n");
      out.write("  xAxis: xAxis4,\n");
      out.write("  yAxis: yAxis4,\n");
      out.write("  valueYField: \"visits\",\n");
      out.write("  categoryXField: \"country\"\n");
      out.write("}));\n");
      out.write("\n");
      out.write("series4.columns.template.setAll({\n");
      out.write("  tooltipText: \"{categoryX}: {valueY}\",\n");
      out.write("  tooltipY: 0,\n");
      out.write("  strokeOpacity: 0,\n");
      out.write("  templateField: \"columnSettings\"\n");
      out.write("});\n");
      out.write("\n");
      out.write("series4.data.setAll(data4);\n");
      out.write("\n");
      out.write("\n");
      out.write("// Make stuff animate on load\n");
      out.write("// https://www.amcharts.com/docs/v5/concepts/animations/\n");
      out.write("series4.appear();\n");
      out.write("chart4.appear(1000, 100);\n");
      out.write("</script>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_forEach_0(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_forEach_0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _jspx_tagPool_c_forEach_var_items.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_forEach_0.setPageContext(_jspx_page_context);
    _jspx_th_c_forEach_0.setParent(null);
    _jspx_th_c_forEach_0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.orderYear}", java.lang.Object.class, (PageContext)_jspx_page_context, null));
    _jspx_th_c_forEach_0.setVar("y");
    int[] _jspx_push_body_count_c_forEach_0 = new int[] { 0 };
    try {
      int _jspx_eval_c_forEach_0 = _jspx_th_c_forEach_0.doStartTag();
      if (_jspx_eval_c_forEach_0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("                   \n");
          out.write("                    <option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${y.orderDate}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${y.orderDate}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</option>\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_forEach_0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_forEach_0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_forEach_0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_forEach_0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_forEach_0.doFinally();
      _jspx_tagPool_c_forEach_var_items.reuse(_jspx_th_c_forEach_0);
    }
    return false;
  }

  private boolean _jspx_meth_c_forEach_1(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_forEach_1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _jspx_tagPool_c_forEach_var_items.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_forEach_1.setPageContext(_jspx_page_context);
    _jspx_th_c_forEach_1.setParent(null);
    _jspx_th_c_forEach_1.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.income}", java.lang.Object.class, (PageContext)_jspx_page_context, null));
    _jspx_th_c_forEach_1.setVar("in");
    int[] _jspx_push_body_count_c_forEach_1 = new int[] { 0 };
    try {
      int _jspx_eval_c_forEach_1 = _jspx_th_c_forEach_1.doStartTag();
      if (_jspx_eval_c_forEach_1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    [\"Month ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${in.month}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\", ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${in.total}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write(", \"\"],\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_forEach_1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_forEach_1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_forEach_1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_forEach_1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_forEach_1.doFinally();
      _jspx_tagPool_c_forEach_var_items.reuse(_jspx_th_c_forEach_1);
    }
    return false;
  }

  private boolean _jspx_meth_c_forEach_2(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_forEach_2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _jspx_tagPool_c_forEach_var_items.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_forEach_2.setPageContext(_jspx_page_context);
    _jspx_th_c_forEach_2.setParent(null);
    _jspx_th_c_forEach_2.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.dataCategory}", java.lang.Object.class, (PageContext)_jspx_page_context, null));
    _jspx_th_c_forEach_2.setVar("c");
    int[] _jspx_push_body_count_c_forEach_2 = new int[] { 0 };
    try {
      int _jspx_eval_c_forEach_2 = _jspx_th_c_forEach_2.doStartTag();
      if (_jspx_eval_c_forEach_2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("        {\n");
          out.write("            category: \"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${c.categoryName}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\",\n");
          out.write("            value: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${c.numberCategory}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("        },\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_forEach_2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_forEach_2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_forEach_2[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_forEach_2.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_forEach_2.doFinally();
      _jspx_tagPool_c_forEach_var_items.reuse(_jspx_th_c_forEach_2);
    }
    return false;
  }
}
